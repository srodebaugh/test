library(tidyverse)
library(extrafont)
library(rvest)
library(janitor)
library(scales)
library(ggchicklet)
library(paletteer)

theme_owen <- function () { 
  theme_minimal(base_size=12, base_family="Consolas") %+replace% 
    theme(
      panel.grid.minor = element_blank(),
      plot.background = element_rect(fill = 'floralwhite', color = 'floralwhite')
    )
}

url <- "https://www.basketball-reference.com/players/d/derozde01.html"

df <-  url %>%
  read_html %>%
  html_nodes(xpath = '//comment()') %>%
  html_text() %>%
  paste(collapse='') %>%
  read_html() %>% 
  html_node("#pbp") %>% 
  html_table()

df <- df %>% 
  row_to_names(row_number = 1) %>% 
  clean_names()

df <- df %>% filter(age != "")

df <- df %>% 
  select(season, pg_percent:c_percent) %>% 
  pivot_longer(!season, names_to = "position", values_to = "time") %>% 
  mutate(time = parse_number(time)/100, 
         time = case_when(
           is.na(time) ~ 0, 
           TRUE ~ time))

df$position <- as.factor(df$position)
df$position <- factor(df$position, levels = c("pg_percent", "sg_percent", "sf_percent", "pf_percent", "c_percent"))

df$season <-  as.numeric(paste0(substr(df$season, 1, 2), substr(df$season, 6, 7)))

df %>% 
  ggplot(aes(season, time)) + 
  geom_chicklet(aes(fill = position)) +
  geom_text(data = . %>% filter(time > .1), aes(label = percent(time, accuracy = 1L)), family = "Consolas", size = 3, position = position_stack(vjust = 0.5)) +
  scale_y_continuous(position = "left", labels = c("0%", "25%", "50%", "75%", "100%"), limits = c(0, 1)) +
  scale_x_continuous(limits = c(2009.5, 2021.5), breaks = seq(2010, 2021,1)) +
  theme_owen() + 
  theme(legend.position = 'bottom', 
        axis.title.y = element_blank(),
        axis.title.x = element_blank(), 
        legend.title = element_blank(), 
        legend.text = element_text(size = 9),
        plot.title = element_text(face = 'bold', hjust = .5), 
        plot.subtitle = element_text(hjust = .5, size = 10), 
        plot.title.position = "plot", 
        plot.margin = unit(c(.5, .5, 1, .5), "lines"), 
        axis.text.y = element_text(margin=margin(0,-15,0,0)), 
        legend.margin=margin(0,0,0,0),
        legend.box.margin=margin(.5,.5,.5,.5)) + 
  labs(title = "DeMar DeRozan Is A Four Now", 
       subtitle = "Estimated Percent Of Time Spent At Each Position")  + 
  guides(fill=guide_legend(
    keywidth= .5,
    keyheight= .2,
    default.unit="inch", 
    label.position = 'top', 
    nrow = 1) 
  ) +
  scale_fill_paletteer_d("LaCroixColoR::PeachPear", labels = c("PG", "SG", "SF", "PF", "C"))
  
  
#  
#### How to create DeRozan's Assist / Turover Rate Line Chart 
# 

url <- "https://www.basketball-reference.com/players/d/derozde01.html"

df <-  url %>%
  read_html %>%
  html_nodes(xpath = '//comment()') %>%
  html_text() %>%
  paste(collapse='') %>%
  read_html() %>% 
  html_node("#advanced") %>% 
  html_table()

df <- df[1:12,]

df$Season2 <-  as.numeric(paste0(substr(df$Season, 1, 2), substr(df$Season, 6, 7)))

df %>% 
  ggplot() + 
  geom_line(aes(x = Season2, y = `AST%`/100, group = 1), color = "#c4ced4", linetype = 'dashed') + 
  geom_point(color = 'black', fill = "#c4ced4", shape = 21, size = 4.5, alpha = .75, aes(x = Season2, y = `AST%`/100)) + 
  geom_line(aes(x = Season2, y = `TOV%`/100, group = 1), color = "#ce1141", linetype = 'dashed') + 
  geom_point(color = 'black', fill = "#ce1141", shape = 21, size = 4.5, alpha = .75, aes(x = Season2, y = `TOV%`/100)) + 
  theme_owen() +
  scale_y_continuous(limits = c(0, .35), breaks = seq(0, .35, .05), labels = scales::percent_format(accuracy = 1L)) +
  scale_x_continuous(breaks = seq(2010, 2021, 1)) +
  labs(x = "", 
       y = "Percentage") + 
  labs(title = "Point DeRozan", 
       subtitle = "DeMar DeRozan's Assist Rate vs. Turnover Rate | 2010 - 2021", 
       caption = "Assist percentage is an estimate of the percentage of teammate field goals a player assisted while he was on the floor.\nTurnover percentage is an estimate of turnovers per 100 plays.") +
  theme(plot.title = element_text(face = 'bold', size = 20), 
        plot.subtitle = element_text(size = 10), 
        plot.title.position = "plot", 
        plot.caption.position =  "plot",
        plot.caption = element_text(size = 6, hjust = 0, vjust = 2.5),
        plot.margin = unit(c(.5, .5, 1, .5), "lines")) +
  annotate(geom = 'label', x = 2020, y = max(df$`AST%`/100), hjust = 0.75, label = "Assist %", family = "Consolas", fill = "#c4ced4", fontface = 'bold', alpha = .5) +
  annotate(geom = 'label', x = 2020, y = min(df$`TOV%`/100),  hjust = 0.75, label = "Turnover %", family = "Consolas", fill = "#ce1141", fontface = 'bold', alpha = .5)